# Originally created 2/10/2021 for the oci-tool project
# Define the stages in this pipeline
stages:
   - format
   - test
   - manual_pull
   - build
   - deploy

format-job:
   stage: format
   tags:
      - development
      - ubuntu
   script:
      - git config --global user.email "svc-gitlabRunner@evoforge.org"
      - git config --global user.name "gitlab-runner"
      #Format hpp files in ./include/OCI and add them to git
      - for files in `find ./include/OCI -name "*.hpp"`; do clang-format -i $files; done
      - find ./include/OCI -name "*.hpp" -exec git add {} \;
      #Format cpp files in ./src and add them to git
      - for files2 in `find ./src -name "*.cpp"`; do clang-format -i $files2; done
      - find ./src -name "*.cpp" -exec git add {} \;
      #Debug
      - echo "RC total equals" [ $GIT_ADD_RC1 + $GIT_ADD_RC2 ]
      #We shouldn't be doing this, but... it's nonportable with out
      - git config http.sslVerify false
      - git commit -m "Formatted version of Commit SHA $CI_COMMIT_SHA. Pushed by Gitlab CI. autoformatted "
      - git remote add test https://redhat-imports.svc:-7z-2QyzApRmfvi4E3zH@gitlab.evoforge.org/mpo/oci-tool.git
      - git push test HEAD:test
   rules:
      - if: "$CI_COMMIT_BRANCH == 'test' && $CI_COMMIT_MESSAGE !~ /noformat/ && $CI_COMMIT_MESSAGE !~ /autoformatted/"
test-job:
   stage: test
   tags:
      - development
      - ubuntu
   script:
      - echo "Starting the test stage"
      - clang-tidy src/bin/oci-sync.cpp -- -Iinclude --std=c++17
      - echo "Completed the test stage"
   rules:
      - if: "$CI_COMMIT_BRANCH == 'test' && $CI_COMMIT_MESSAGE !~ /autoformatted/"
manual_pull-job:
   # TODO: Figure out how to test for existence of gitPull directory for the manual_clone stage
   #stage: manual_clone
   #script:
   #   - echo "Beginning manual clone stage for $CI_PROJECT_NAME"
   #   - mkdir -p /home/gitlabRunner/gitPull
   #
   #if: #if the oci-tool directory doesn't already exist
   stage: manual_pull
   tags:
      - rhel
      - development
   script:
      - echo "Beginning manual pull stage for $CI_PROJECT_NAME"
      - mkdir -p ~/gitPull/oci-tool
      - cd ~/gitPull/oci-tool
      - git checkout test
      - git pull
      - echo "Completed git pull for $CI_PROJECT_NAME"
   rules:
      - if: "$CI_COMMIT_BRANCH == 'test' && $CI_COMMIT_MESSAGE !~ /nopull/ && $CI_COMMIT_MESSAGE =~ /autoformatted/"
build-job:
   stage: build
   tags:
      - rhel
      - development
   script:
      - echo "Beginning build stage for $CI_PROJECT_NAME"
      - mkdir -p /home/gitlabRunner/build_files/build
      - cd ~/build_files/build
      - cmake ~/gitPull/oci-tool
      - make
      - make test
      - echo "Completed build stage"
   rules:
      - if: "$CI_COMMIT_BRANCH == 'test' && $CI_COMMIT_MESSAGE =~ /autoformatted/"


deploy-job:
   stage: deploy
   tags:
      - rhel
      - development
   script:
      # collect ~/BUILD/bin/oci-sync , rpm package it and move it to ##Talk to Bruce about rpm low-to-high
      - echo "Beginning the deploy stage for $CI_PROJECT_NAME"
      - echo "Deploy steps here - IF I HAD ANY"
      - echo "Completed the deploy stage, ending pipeline run"
   rules:
      - if: "$CI_COMMIT_BRANCH == 'test'&& $CI_COMMIT_MESSAGE =~ /autoformatted/"
